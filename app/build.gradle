apply plugin: 'com.android.application'

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    signingConfigs {
        config {
            keyAlias 'iap'
            keyPassword 'scse123456tydc'
            storeFile file('signature')
            storePassword 'scse123456tydc'
        }
    }
    defaultConfig {
        applicationId "com.canice.wristbandapp"
        minSdkVersion 18
        targetSdkVersion 21
        resConfigs "zh", "en"
        versionCode project.hasProperty('version_code') ? Integer.parseInt(version_code) : 2
        versionName project.hasProperty('version_name') ? version_name : "9.9.9"
        buildConfigField "int", "LOG_LEVEL", project.hasProperty('log_level') ? log_level : "2"
        buildConfigField "boolean", "HEART_RATE_NOTIFY", "false"
    }
    buildTypes {
        debug {
            signingConfig signingConfigs.config
        }
        release {
            signingConfig signingConfigs.config
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    productFlavors {
        oldFit {
            applicationId 'com.canice.wristbandapp1'
            buildConfigField "boolean", "newFit", "false"
            manifestPlaceholders = [UMENG_APPKEY: '58143a215312dda299003521', TENCENT_APPID: '1105683981']
        }
        newFit {
            applicationId 'com.canice.wristbandapp'
            buildConfigField "boolean", "newFit", "true"
            manifestPlaceholders = [UMENG_APPKEY: '5722f498e0f55adccf002f43', TENCENT_APPID: '1105459075']
        }
    }
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def oldFile = output.outputFile
            def apkName = 'EasyFit-' + variant.productFlavors[0].name + '-' + variant.buildType.name + "-" + variant.versionName + '-' + getCurrentDate() + '.apk'
            output.outputFile = new File(oldFile.parent, apkName)
        }
    }
    lintOptions {
        abortOnError false
    }
}

static def getCurrentDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMdd')
    return formattedDate
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    androidTestCompile 'junit:junit:4.12'
    compile 'com.google.code.gson:gson:2.7'
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.umeng.analytics:analytics:latest.integration'
    compile project(path: ':log')
}
